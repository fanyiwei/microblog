var mongodb = require('./db');
var User = require('./user');
var Attention = require('./attention');
var Comment = require('./comment');

function mAdd(username,post,name,time) {
	this.user = username;
	this.post = post;
	this.name=name;
	if(time) {
		this.time = time;
	} else {
		this.time = new Date();
	}
};
module.exports = mAdd;

mAdd.prototype.save = function save(callback) {

	var post = {
		user:this.user,
		post:this.post,
		time:this.time,
		name:this.name
	};
	mongodb.open(function(err,db) {
		if(err) {
			return callback(err);
		}
		db.collection('mAdd',function(err,collection) {
			if(err) {
				mongodb.close();
				return callback(err);
			}

			collection.ensureIndex('user');
			collection.insert(post,{safe:true},function(err,post) {
				mongodb.close();
				callback(err,post);
			});
		});
	});
};
mAdd.prototype.get = function get(username,callback) {
	//获取关注人列表
	Attention.getAttention(username,function(err,attentionEmails) {

		var attentionBox = [];
		attentionEmails.forEach(function(value,index) {
			attentionBox.push(value.to);
		});

		attentionBox.push(username);

		console.log(attentionBox);

		mongodb.open(function(err,db) {
			if(err) {
				return callback(err);
			}
			db.collection('mAdd',function(err,collection) {
				if(err) {
					mongodb.close();
					return callback(err);
				}
				//查询所关注人的微博
				var query = {
					user:{"$in":attentionBox}
				};
				collection.find(query).sort({time:-1}).toArray(function (err,docs) {
					mongodb.close();
					if(err) {
						callback(err,null);
					}

					var posts = [];
					
					var len = docs.length;


					docs.forEach(function(doc,index) {
						post = new mAdd(doc.user,doc.post,doc.name,doc.time);
						if(doc.user == username) {
							post.del=1;
						}
						post.id=doc._id;
						posts.push(post);
						
						//console.log(doc);
					});
					callback(null,posts);
				});
			});
		});
	});
};

mAdd.del = function del(wb_id,callback) {
	mongodb.open(function(err,db) {
		if(err) {
			return callback(err);
		}
		db.collection('mAdd',function(err,collection) {
			if(err) {
				mongodb.close();
				return callback(err);
			}
			var BSON = require('mongodb').BSONPure;
			var obj_id = BSON.ObjectID.createFromHexString(wb_id);
			
			collection.remove({"_id":obj_id},function(err,doc) {
				mongodb.close();
				callback(err,doc);
			});
		});
	});
};