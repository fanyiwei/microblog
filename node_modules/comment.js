var mongodb = require('./db');

function Comment(comment) {
	this.wbId = comment.wbId;
	this.content = comment.content;
	this.userId = comment.userId;
	this.userName = comment.userName;
	this.time = new Date();
}

module.exports = Comment;
Comment.prototype.save = function(callback) {
	var comment = {
		wbId: this.wbId,
		content: this.content,
		userID: this.userId,
		userName: this.userName,
		time:this.time
	};

	mongodb.open(function(err,db) {
		if(err) {
			return callback(er);
		}
		db.collection('comment',function(err,collection) {
			if(err) {
				mongodb.close();
				return callback(err);
			}
			collection.ensureIndex('wbId');
			collection.insert(comment,function(err,doc) {
				mongodb.close();
				doc[0].del=1;
				callback(err,doc);
			});
		});
	});
};

Comment.getCommentByWBid = function(wbId,currentUserId,callback) {
	mongodb.open(function(err,db) {
		if(err) {
			return callback(er);
		}
		db.collection('comment',function(err,collection) {
			if(err) {
				mongodb.close();
				return callback(err);
			}
			collection.find({wbId:wbId}).toArray(function(err,docs) {
				mongodb.close();
				docs.forEach(function(value,index) {
					if(value.userID === currentUserId) {
						value.del=1;
					} else {
						value.del=0;
					}
				});
				console.log(docs);
				callback(err,docs);
			});
		});
	});
};
Comment.del = function(commentId,callback) {
	mongodb.open(function(err,db) {
		if(err) {
			return callback(err);
		}
		db.collection('comment',function(err,collection) {
			if(err) {
				mongodb.close();
				return callback(err);
			}
			var BSON = require('mongodb').BSONPure;
			var obj_id = BSON.ObjectID.createFromHexString(commentId);
			
			collection.remove({"_id":obj_id},function(err,doc) {
				mongodb.close();
				callback(err,doc);
			});
		});
	});
}